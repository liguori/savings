@page "/configuration"
@attribute [Authorize]
<h1>Configuration</h1>
@if (Configuration == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@Configuration" OnValidSubmit="@OnValidSubmit">
        <DataAnnotationsValidator />
        <div class="form-row">
            <div class="form-group col-3">
                <label>Date :</label><br />
                <RadzenDatePicker @bind-Value="LastMaterializedDate" DateFormat="dd/MM/yyyy" />
                <ValidationMessage For="@(() => LastMaterializedDate)" />
            </div>
            <div class="form-group col-3">
                <label>Amount:</label>
                <InputNumber @bind-Value="@LastMaterializedAmount" @bind-Value:format="F2" class="form-control" />
                <ValidationMessage For="@(() => LastMaterializedAmount)" />
            </div>
             <div class="form-group col-3">
                <label>Interval:</label>
                <InputNumber @bind-Value="@Configuration.EndPeriodRecurrencyInterval" class="form-control" />
                <ValidationMessage For="@(() => Configuration.EndPeriodRecurrencyInterval)" />
            </div>
            <div class="form-group col-3">
                <label>Recurrency:</label>
                <InputSelect @bind-Value="@Configuration.EndPeriodRecurrencyType" class="form-control">
                    @foreach (var value in Enum.GetValues(typeof(Savings.Model.RecurrencyType)))
                    {
                        <option>@value</option>
                    }
                </InputSelect>
                <ValidationMessage For="@(() => Configuration.EndPeriodRecurrencyType)" />
            </div>
           
        </div>

        <div class="form-group">
            <label>Cash withdrawal category:</label>
            <InputSelectNumber @bind-Value="@Configuration.CashWithdrawalCategoryID" class="form-control">
                <option value=""></option>
                @{
                    if (Categories != null)
                    {
                        foreach (var value in Categories)
                        {
                            <option value="@value.ID" selected="@(value.ID == Configuration.CashWithdrawalCategoryID)">@value.Icon @value.Description</option>
                        }
                    }
                }
            </InputSelectNumber>
            <ValidationMessage For="@(() => Configuration.CashWithdrawalCategoryID)" />
        </div>
        <div class="text-center">
            <button type="submit" class="btn btn-success">
                <span class="oi oi-circle-check" aria-hidden="true"></span>SAVE
            </button>
        </div>
    </EditForm>

}