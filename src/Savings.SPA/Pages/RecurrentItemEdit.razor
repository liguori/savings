@attribute [Authorize]
<EditForm Model="@recurrentItemToEdit" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <div class="form-row">
        <div class="form-group col">
            <label>Start date :</label><br />
            <RadzenDatePicker @bind-Value="recurrentItemToEdit.StartDate" DateFormat="dd/MM/yyyy" />
            <ValidationMessage For="@(() => recurrentItemToEdit.StartDate)" />
        </div>
        <div class="form-group col">
            <label>End date :</label><br />
            <RadzenDatePicker @bind-Value="recurrentItemToEdit.EndDate" DateFormat="dd/MM/yyyy" />
            <ValidationMessage For="@(() => recurrentItemToEdit.EndDate)" />
        </div>
    </div>
    <div class="form-row">
        <div class="form-group col">
            <label>Amount:</label>
            <InputNumber @bind-Value="@recurrentItemToEdit.Amount" @bind-Value:format="F2" class="form-control" @ref="amountInputNumber" />
            <ValidationMessage For="@(() => recurrentItemToEdit.Amount)" />
        </div>
        <div class="form-group col">
            <label>Timeline weight:</label>
            <InputNumber @bind-Value="@recurrentItemToEdit.TimelineWeight" class="form-control" />
            <ValidationMessage For="@(() => recurrentItemToEdit.TimelineWeight)" />
        </div>
    </div>
    <div class="form-group ">
        <label>Note:</label>
        <InputText @bind-Value="@recurrentItemToEdit.Note" class="form-control" />
        <ValidationMessage For="@(() => recurrentItemToEdit.Note)" />
    </div>
    <div class="form-row">
        <div class="form-group col-md-4 col">
            <label>Recurrency:</label>
            <InputSelect @bind-Value="recurrentItemToEdit.RecurrencyType" class="form-control">
                @foreach (var value in Enum.GetValues(typeof(Savings.Model.RecurrencyType)))
                {
                    <option>@value</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => recurrentItemToEdit.RecurrencyType)" />
        </div>
        <div class="form-group col-md-3 col">
            <label>Interval:</label>
            <InputNumber @bind-Value="@recurrentItemToEdit.RecurrencyInterval" class="form-control" />
            <ValidationMessage For="@(() => recurrentItemToEdit.RecurrencyInterval)" />
        </div>
        <div class="form-group col-md-5 col-sm-12">
            <label>Type:</label>
            <InputSelect @bind-Value="recurrentItemToEdit.Type" class="form-control">
                @foreach (var value in Enum.GetValues(typeof(Savings.Model.MoneyType)))
                {
                    <option>@value</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => recurrentItemToEdit.Type)" />
        </div>
    </div>
    <div class="form-group">
        <label>Category:</label>
        <InputSelectNumber @bind-Value="@recurrentItemToEdit.CategoryID" class="form-control">
            <option value=""></option>
            @{
                if (Categories != null)
                {
                    foreach (var value in Categories)
                    {
                        <option value="@value.ID" selected="@(value.ID == recurrentItemToEdit.CategoryID)">@value.Icon @value.Description</option>
                    }
                }
            }
        </InputSelectNumber>
        <ValidationMessage For="@(() => recurrentItemToEdit.CategoryID)" />
    </div>
    <div class="text-center">
        <button type="submit" class="btn btn-success">
            <span class="oi oi-circle-check" aria-hidden="true"></span>SAVE
        </button>
        <button type="button" class="btn btn-warning" @onclick="@(() => { this.dialogService.Close(false); })">
            <span class="oi oi-reload" aria-hidden="true"></span>CANCEL
        </button>
        <button type="button" class="btn btn-danger" @onclick="@(()=>Delete())"><span class="oi oi-trash" aria-hidden="true"></span></button>
    </div>
</EditForm>
