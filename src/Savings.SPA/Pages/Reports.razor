@page "/reports"
@attribute [Authorize]
<h1>Reports</h1>
@if (RecurrentItems == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>Categories</h2>
    <div class="row">
        <div class="col-md-3 col">
            <label>From:</label><br />
            <RadzenDatePicker @bind-Value="FilterDateFrom" DateFormat="dd/MM/yyyy" Change="@(args => DateTimeDateChanged(args, nameof(FilterDateFrom)))" />
        </div>
        <div class="col-md-3 col">
            <label>To:</label><br />
            <RadzenDatePicker @bind-Value="FilterDateTo" DateFormat="dd/MM/yyyy" Change="@(args => DateTimeDateChanged(args, nameof(FilterDateTo)))" />
        </div>
        <div class="col-md-6 col">
            <label>Group by:</label>
            <select class="form-control" @onchange="FilterGroupByCategoryPeriodChanged">
                <option value="yy/MM" selected="@("yy/MM" == FilterCategoryGroupByPeriod)">Month</option>
                <option value="yyyy" selected="@("yyyy" == FilterCategoryGroupByPeriod)">Year</option>
            </select>
        </div>
    </div>
    <div class="table-responsive">
        <table class="table table-bordered table-sm table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th></th>
                    @foreach (var c in statistics)
                    {
                        <th>@c.CategoryIcon @c.Category</th>
                    }
                </tr>

            </thead>
            <tbody>
                @foreach (var period in statistics.SelectMany(x => x.Data.Select(x => x.Period)).Distinct().OrderByDescending(x => x))
                {
                    <tr>
                        <td><b>@period</b></td>
                        @foreach (var c in statistics)
                        {
                            var item = c.Data.Where(x => x.Period == period).FirstOrDefault();
                            <td class="item-action text-end" @onclick="@(() => OpenDetails(c.CategoryID,period))">@item?.Amount.ToString("N2")</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="container">
        <div class="row">
            <div class="col-sm-12 my-5">
                <RadzenChart>
                    @foreach (var category in FilterStatisticsResume())
                    {
                        <RadzenLineSeries Smooth="false" Data="@category.Data" CategoryProperty="Period" Title="@category.Category" ValueProperty="Amount">
                            <RadzenMarkers MarkerType="MarkerType.Circle" />
                            <RadzenSeriesDataLabels Visible="false" />
                        </RadzenLineSeries>
                    }
                    <RadzenCategoryAxis Padding="20" Formatter="@FormatAsMonth" />
                    <RadzenValueAxis Formatter="@FormatAsAmount">
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Money" />
                    </RadzenValueAxis>
                </RadzenChart>
            </div>
        </div>
    </div>
    <h2>Installments Resume</h2>
    <div class="row">
        @for (int i = 0; i < RecurrentItems.Length; i++)
        {
            <div class="col-md-3">
                <b>@RecurrentItems[i].Note</b>

                @{
                    var currentItemProjection = Installments.Where(x => x.RecurrentMoneyItemID == RecurrentItems[i].ID);
                }
                <table class="table table-sm table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Date</th>
                            <th class="text-end">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in currentItemProjection)
                        {
                            <tr>
                                <td>@item.Date.ToString("dd/MM/yyyy")</td>
                                <td class="text-end">@item.Amount.ToString("N2")</td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th scope="row">Totals</th>
                            <td class="text-end"><b>@currentItemProjection.Sum(x => x.Amount).ToString("N2")</b></td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        }
    </div>
    <div><b>TOTAL: @Installments.Sum(x => x.Amount).ToString("N2")</b></div>

}